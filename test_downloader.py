#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –ø–æ HTTP —Å—Å—ã–ª–∫–∞–º
"""

import os
import requests
import datetime
from urllib.parse import urlparse, unquote


def download_file(url, output_dir="downloads", timeout=60):
    """
    –°–∫–∞—á–∏–≤–∞–µ—Ç —Ñ–∞–π–ª –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ
    
    Args:
        url (str): URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        output_dir (str): –ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'downloads')
        timeout (int): –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    
    Returns:
        str: –ü—É—Ç—å –∫ —Å–∫–∞—á–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
    """
    try:
        print(f"üåê –ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ: {url}")
        start_time = datetime.datetime.now()
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        os.makedirs(output_dir, exist_ok=True)
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º GET –∑–∞–ø—Ä–æ—Å
        response = requests.get(url, stream=True, timeout=timeout)
        response.raise_for_status()
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ URL
        parsed_url = urlparse(url)
        filename = os.path.basename(unquote(parsed_url.path))
        
        # –ï—Å–ª–∏ –∏–º—è —Ñ–∞–π–ª–∞ –ø—É—Å—Ç–æ–µ, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        if not filename or filename == "/":
            filename = f"downloaded_file_{int(datetime.datetime.now().timestamp())}"
        
        # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        filepath = os.path.join(output_dir, filename)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
        content_length = response.headers.get('content-length')
        total_size = int(content_length) if content_length else None
        
        print(f"üìÅ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫: {filepath}")
        if total_size:
            print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {total_size / 1024 / 1024:.2f} MB")
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –ø–æ —á–∞—Å—Ç—è–º
        downloaded_size = 0
        with open(filepath, 'wb') as file:
            for chunk in response.iter_content(chunk_size=8192):
                if chunk:
                    file.write(chunk)
                    downloaded_size += len(chunk)
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –µ—Å–ª–∏ –∑–Ω–∞–µ–º —Ä–∞–∑–º–µ—Ä
                    if total_size:
                        progress = (downloaded_size / total_size) * 100
                        print(f"\rüì• –ü—Ä–æ–≥—Ä–µ—Å—Å: {progress:.1f}% ({downloaded_size / 1024 / 1024:.2f} MB)", end="")
        
        # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        end_time = datetime.datetime.now()
        duration = (end_time - start_time).total_seconds()
        
        print(f"\n‚úÖ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print(f"üìÅ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {filepath}")
        print(f"üìä –†–∞–∑–º–µ—Ä: {os.path.getsize(filepath) / 1024 / 1024:.2f} MB")
        print(f"‚è±Ô∏è  –í—Ä–µ–º—è: {duration:.2f} —Å–µ–∫—É–Ω–¥")
        
        return filepath
        
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ HTTP –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return None


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üöÄ –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞
    test_url = "http://46.161.7.142/files/18370066/–ê–∫—Ç —Å–ø–∏—Å–∞–Ω–∏—è 1 –æ—Ç 09.06.2025 —Å—É–º–º—ã –¥–µ–±–∏—Ç–æ—Ä—Å–∫–æ–π –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –±–µ–∑ –ò–ù–ù .pdf"
    
    print(f"üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ:")
    print(f"URL: {test_url}")
    print("-" * 50)
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
    result = download_file(test_url)
    
    if result:
        print(f"\nüéâ –¢–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω! –§–∞–π–ª —Å–∫–∞—á–∞–Ω: {result}")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ
        file_size = os.path.getsize(result)
        print(f"üìã –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
        print(f"   ‚Ä¢ –†–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç ({file_size / 1024:.2f} KB)")
        print(f"   ‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ: {os.path.splitext(result)[1]}")
        
    else:
        print(f"\nüí• –¢–µ—Å—Ç –Ω–µ—É–¥–∞—á–µ–Ω! –§–∞–π–ª –Ω–µ –±—ã–ª —Å–∫–∞—á–∞–Ω")


if __name__ == "__main__":
    main()